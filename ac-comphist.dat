((("Get" .
   [1 0 0])
  ("do" .
   [1 0])
  ("user" .
   [7 0 0 0])
  ("if" .
   [2 0])
  ("ref" .
   [1 0 0])
  ("letfn" .
   [1 0 0 0 0])
  ("dupx" .
   [1 0 0 0])
  ("empty-field?" .
   [0 0 0 0 0 0 0 0 1 1 0 0])
  ("empty-fields" .
   [3 0 0 0 0 0 0 0 0 0 0 0])
  ("get-all-board" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("player-input" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("not=" .
   [1 0 0 0])
  ("moveable?" .
   [1 0 0 0 0 0 0 0 0])
  ("player-move-input" .
   [0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0])
  ("user-input" .
   [1 0 0 0 0 0 0 1 0 0])
  ("*print-level*" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("15" .
   [1 0])
  (":winner" .
   [1 0 0 0 0 0 0])
  ("player-1" .
   [1 0 0 0 0 0 0 0])
  ("standard-mode" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("start-game" .
   [1 0 0 0 0 0 0 0 0 0])
  ("player." .
   [1 0 0 0 0 0 0])
  ("19" .
   [1 0])
  ("16" .
   [1 0])
  ("17" .
   [1 0])
  ("swap-player" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("case" .
   [1 0 0 0])
  ("win?" .
   [2 0 0 0])
  ("mode" .
   [7 0 0 0])
  ("draw" .
   [2 0 0 0])
  ("remove-token" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("clothesline.core" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("clothesline.service.helpers" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Myblog.config" .
   [0 0 0 1 0 1 0 0 0 0 0 0 0])
  ("page-leafing" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":else" .
   [4 0 0 0 0])
  ("page-validator" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":style" .
   [1 0 0 0 0 0])
  ("n-text" .
   [1 0 0 0 0 0])
  ("newer" .
   [1 0 0 0 0])
  ("older" .
   [1 0 0 0 0])
  (":div" .
   [2 0 0 0])
  ("get-post-count" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("page-count" .
   [11 0 0 0 0 0 0 0 2 0])
  ("standard-blog" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0])
  (":.newer" .
   [1 0 0 0 0 0 0])
  (":.older" .
   [1 0 0 0 0 0 0])
  ("leafing" .
   [8 0 0 0 1 0 0])
  ("n-link" .
   [2 0 0 0 0 0])
  ("o-text" .
   [2 0 0 0 0 0])
  ("o-link" .
   [2 0 0 0 0 0])
  ("page-subtitle" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("standard-header" .
   [2 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("page-title" .
   [4 0 0 0 0 0 1 0 0 0])
  ("subtitle" .
   [2 0 0 0 0 0 0 0])
  ("page404" .
   [1 0 0 0 0 0 0])
  ("deftemplate" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("standard-footer" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("footer" .
   [13 0 0 0 0 0])
  ("empty" .
   [3 0 0 0 0])
  ("blog-page" .
   [4 0 0 0 0 0 0 0 0])
  ("render-blog" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("html-title" .
   [2 0 0 0 0 0 1 1 0 0])
  ("partition-all" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("post-by-uri" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("blog-title" .
   [3 0 0 0 0 0 0 2 1 0])
  ("get-posts" .
   [1 0 0 0 0 0 0 1 0])
  ("partition-count" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 1 0])
  ("partition-posts" .
   [1 0 0 0 0 0 0 0 0 0 0 1 1 1 0])
  ("read-string" .
   [5 0 0 0 0 0 0 0 0 0 0])
  ("blog" .
   [6 0 0 0])
  ("blogpost-per-page" .
   [1 0 0 0 0 0 0 0 0 1 2 1 0 0 0 0 0])
  ("any-node" .
   [4 0 0 0 0 0 0 0])
  (":>" .
   [1 0])
  ("posts" .
   [19 0 0 0 0])
  ("unchecked-inc" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("unchecked-add" .
   [0 0 0 0 3 1 0 1 0 0 0 0 0])
  ("longs" .
   [0 0 0 0 2])
  (":right" .
   [1 0 0 0 0 0])
  (":left" .
   [1 0 0 0 0])
  (":item" .
   [1 0 0 0 0])
  ("TreeNode" .
   [1 0 0 0 0 0 0 0])
  ("f" .
   [1])
  (":task" .
   [1 0 0 0 0])
  ("alter-meta!" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("make-task" .
   [6 0 0 0 1 0 0 0 0])
  ("task-pos" .
   [1 0 0 0 0 0 0 0])
  ("map-indexed" .
   [1 0 0 0 0 0 0 1 0 0 0])
  ("roundcount" .
   [0 0 0 0 0 0 1 0 1 0])
  ("newpair" .
   [6 0 0 0 0 0 0])
  ("oldpair" .
   [5 0 0 0 0 0 1])
  ("Fightpair" .
   [0 0 0 0 0 0 2 1 0])
  ("KrasseAxt" .
   [0 0 0 0 1 0 0 0 0])
  ("Superstieffel" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("Superhandschue" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("Superpanzer" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("exampleMonster" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("SchnellesMiniSchwert" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Standardstieffel" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("Standardhandschue" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("Standardpanzer" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("Standardhelm" .
   [1 0 0 0 0 1 0 0 0 0 0 0])
  ("150" .
   [1 0 0])
  ("CreatKämpfer" .
   [0 0 0 0 0 0 0 2 0 0 0 0])
  ("Superhelm" .
   [1 0 0 0 1 0 0 0 0])
  ("Monster" .
   [2 0 0 0 2 1 0])
  ("zero?" .
   [8 0 0 0 0])
  ("dead?" .
   [5 0 0 0 0])
  (":attribs" .
   [2 0 0 0 1 0 0 0])
  ("getDiffAttrib" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("Komentator" .
   [1 0 0 0 0 0 0 0 0 1])
  ("add-watch" .
   [0 0 0 0 0 0 0 1 0])
  ("attackMax" .
   [2 0 0 0 0 0 0 0 0])
  ("new-F" .
   [5 0 0 0 0])
  ("old-M" .
   [3 0 0 0 0])
  (":HP" .
   [4 0 0])
  ("new-M" .
   [4 0 0 0 0])
  ("old-F" .
   [2 0 0 0 0])
  ("Fighter" .
   [10 0 0 2 1 2 0])
  ("commute" .
   [1 0 0 0 0 0 0])
  ("dosync" .
   [1 0 0 0 0 0])
  (":allrounder" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("BuyAllrounder" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":tank" .
   [1 0 0 0 0])
  ("BuyTokenn" .
   [1 0 0 0 0 0 0 0 0])
  (":magier" .
   [2 0 0 0 0 0 0])
  ("BuyToken" .
   [1 0 0 0 0 0 2 1])
  ("AllKaempfer" .
   [0 0 0 0 1 1 0 0 0 0 0])
  ("befehl" .
   [1 0 0 0 0 0])
  ("Figher" .
   [2 0 0 1 0 0])
  ("AllKämper" .
   [0 0 0 1 0 0 0 0 0])
  ("alter" .
   [3 0 0 0 0])
  ("TemplaitToken." .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("TemplaitFighter" .
   [0 0 0 0 0 0 0 0 0 0 1 1 0 1 0])
  ("TemplaitToken" .
   [0 0 0 0 2 0 0 0 0 0 0 0 1])
  ("Healthpoints" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("Attackpower" .
   [0 0 0 2 0 0 0 0 0 0 0])
  ("spath" .
   [1 0 0 0 0])
  ("right" .
   [3 0 0 0 0])
  ("left" .
   [3 0 0 0])
  ("scheme-path" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("bst" .
   [1 0 0])
  ("formdesign" .
   [1 0 0 0 0 0 0 0 0 0])
  (":td" .
   [9 0 0])
  (".toLowerCase" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("Finder" .
   [1 0 0 0 0 0])
  ("ItemToFile" .
   [0 0 0 0 0 0 0 0 1 0])
  ("BuyGetraenk" .
   [0 0 0 2 0 1 0 0 0 0 0])
  ("item2" .
   [1 0 0 0 0])
  ("item1" .
   [1 0 0 0 0])
  ("sos2" .
   [6 0 0 0])
  ("sos1" .
   [9 0 0 0])
  ("occurcount" .
   [0 0 0 0 0 0 1 0 0 0])
  ("count-occurrences" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("title" .
   [16 0 0 0 0])
  ("ClojureMap-Article" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":html5" .
   [1 0 0 0 0 0])
  ("Show-Article" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  (":article" .
   [1 0 0 0 0 0 0 0])
  ("ShowArticle" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("RunBigTest" .
   [0 0 0 0 0 0 1 0 0 0])
  ("AllArticle" .
   [1 0 0 0 0 0 0 0 0 0])
  ("ShowAllArticle" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ds-key" .
   [1 0 0 0 0 0])
  ("value" .
   [1 0 0 0 0])
  ("extra" .
   [2 0 0 0 0])
  (":rest" .
   [6 0 0 0 0])
  ("ShowAll" .
   [1 0 0 0 0 0 0])
  ("Mainpage" .
   [4 0 0 0 0 0 0 0])
  ("main" .
   [1 0 0 0])
  ("body" .
   [13 0 0 0])
  (":Addition" .
   [0 0 0 0 0 0 0 1 0])
  ("params" .
   [2 0 0 0 0 0])
  (":Article" .
   [2 0 0 0 0 0 0 0])
  ("POST" .
   [1 0 0 0])
  ("NewArticle-form" .
   [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("NewArticle-html" .
   [0 0 0 0 1 2 0 0 0 0 0 0 0 0 0])
  ("maintext" .
   [4 0 0 0 0 0 0 0])
  ("addstuff" .
   [1 0 0 0 0 0 0 0])
  ("number?" .
   [3 0 0 0 0 0 0])
  (":ul" .
   [3 0 0])
  (":li" .
   [7 0 0])
  ("vals" .
   [2 0 0 0])
  ("GetArticle" .
   [0 0 0 0 0 3 1 1 0 0])
  (":maintext" .
   [19 0 0 0 0 1 0 0 0])
  (":number" .
   [9 0 0 0 0 0 0])
  ("ae-ds" .
   [1 0 0 0 0])
  ("AddArticle" .
   [1 0 0 1 0 1 3 1 0 0])
  ("article" .
   [2 0 0 0 0 0 0])
  ("AllArticles" .
   [4 0 0 1 0 3 0 1 0 0 0])
  (":kind" .
   [5 0 0 0 0])
  ("ae-ds/query" .
   [2 0 0 0 0 0 1 1 0 1 0])
  ("extras" .
   [2 0 0 0 0 0])
  ("msg" .
   [1 0 0])
  ("addarticle" .
   [0 0 0 0 0 1 0 0 0 0])
  ("getinfo" .
   [1 0 0 0 0 0 0])
  (":filter" .
   [5 0 0 0 0 0 0])
  ("route" .
   [1 0 0 0 0])
  ("compojure.route" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("keys" .
   [6 0 0 0])
  ("Zutaten-str" .
   [2 0 0 0 0 0 0 0 0 1 0])
  ("zutaten-str" .
   [1 0 0 0 0 0 0 0 0 0 2])
  ("when-not" .
   [11 0 0 0 0 0 0 0])
  ("verpacken" .
   [1 0 0 0 0 0 0 0 0])
  ("Zutatenfactory" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("standort" .
   [1 0 0 0 0 0 0 0])
  ("Gemüse" .
   [4 0 0 0 0 0])
  ("Kässe" .
   [3 0 0 0 0])
  ("Sosse" .
   [5 0 0 0 0])
  ("Teig" .
   [5 0 0 0])
  ("identity" .
   [1 0 1 3 2 1 0 0])
  ("mapcat" .
   [13 0 0 0 0 0])
  (":vegetarisch" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":Berlin" .
   [1 0 0 0 0 0 0])
  ("Pizzakarte" .
   [2 0 0 0 0 0 0 0 0 0])
  ("MünchnerPizzas" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("BerlinerPizzas" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("hash-map" .
   [3 0 0 0 0 0 0 0])
  ("PizzaNamesMünchen" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("PizzaNamesBerlin" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("StandardPizzas" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Berliner" .
   [0 0 0 0 1 0 0 0])
  ("FilialenPizzas" .
   [2 0 0 0 0 0 3 0 0 0 0 0 0 0])
  ("ZutatenBerlin" .
   [0 0 0 0 0 0 0 0 1 1 0 0 0])
  ("ZutatenMünchen" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0 0])
  ("Zutatenlagern" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1])
  ("Berlin" .
   [1 0 0 0 0 0])
  ("Pizzalist" .
   [2 0 0 0 0 0 0 3 1])
  ("Pizzanames" .
   [0 0 0 0 0 0 0 0 1 3])
  ("ThunfischPizza" .
   [1 0 0 1 0 0 0 0 0 0 1 0 0 0])
  (":thunfisch" .
   [0 0 0 0 0 1 0 1 0 0])
  (":krabben" .
   [3 0 0 0 0 0 0 0])
  ("KrabbenPizza" .
   [1 0 0 1 1 0 0 0 0 0 0 0])
  ("VegetarischePizza" .
   [1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("AddName" .
   [0 0 0 0 1 0 0])
  ("WithStandard" .
   [2 0 1 0 3 0 0 0 0 0 0 0])
  (":gemüse" .
   [1 0 0 2 1 1 0])
  ("WithStandardPizza" .
   [0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0])
  ("KrabbenPizza.java" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("StandardPizza" .
   [2 0 0 0 1 5 0 1 0 0 0 1 0])
  ("StackTraceElement" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":käse" .
   [3 0 0 0 0])
  (":sosse" .
   [3 0 0 0 0 0])
  (":teig" .
   [9 0 0 0 0])
  ("VegetarischePizza.java" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("Vegetarisch" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("Thunfisch" .
   [1 0 0 0 2 0 0 0 2])
  ("ThunfischStücke" .
   [0 0 0 0 0 0 0 0 0 0 1 1 0 0 0])
  ("Zutaten." .
   [1 0 0 0 0 0 0 0])
  ("def" .
   [7 0 0])
  ("Paprika" .
   [1 0 0 0 0 0 0])
  ("verpackung" .
   [2 0 0 0 0 0 0 0 0 0])
  ("Vorbereitung" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("MachEine" .
   [1 0 0 0 1 0 0 1])
  ("pizza" .
   [37 0 0 0 0])
  ("BestellePizza" .
   [1 0 0 0 2 0 0 0 0 0 0 0 0])
  ("bestelle" .
   [8 0 0 0 0 0 0 0])
  ("getPizza" .
   [7 0 0 0 0 1 4 1])
  ("prnglob" .
   [0 0 0 0 0 1 0])
  ("union" .
   [1 0 0 0 0])
  ("difference" .
   [0 0 0 1 1 0 0 0 0 0])
  ("*state*" .
   [6 0 0 2 2 2 0])
  ("son-at-school" .
   [0 0 0 0 0 0 0 0 0 0 0 2 0])
  ("have-phone-book" .
   [0 0 0 0 0 2 0 0 0 0 0 0 0 0 0])
  ("hash" .
   [0 0 0 1])
  ("car-needs-battery" .
   [0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("*school-ops*" .
   [0 0 0 0 1 4 0 0 0 0 0 0])
  ("operators" .
   [0 0 0 0 0 1 1 0 0])
  ("in-communication-with-shop" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("know-phone-number" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("have-money" .
   [0 0 0 0 0 0 1 0 1 1])
  ("shop-has-money" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("shop-knows-problem" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("del-list" .
   [0 0 0 0 0 0 2 0])
  ("add-list" .
   [0 0 0 0 0 0 2 0])
  ("preconds" .
   [1 0 0 0 0 1 0 0])
  ("action" .
   [1 0 0 0 0 0])
  ("car-works" .
   [1 0 0 0 0 0 0 0 0])
  ("op." .
   [5 0 1])
  ("son-at-home" .
   [2 0 0 0 0 0 1 0 0 0 0])
  ("sandbar/sandbar-session" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sandbar/sandbar-core" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("orgin-field" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("y-org" .
   [2 0 0 0 0])
  ("x-org" .
   [1 0 0 1 0])
  ("get-token" .
   [9 0 0 0 0 0 0 4 0])
  ("token-to-move" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("y-des" .
   [1 0 0 0 0])
  ("x-des" .
   [1 0 0 0 0])
  ("not" .
   [4 0 0])
  ("new-board" .
   [1 0 0 0 0 0 0 0 0])
  ("reverse" .
   [1 0 0 0 0 0 0])
  ("vec" .
   [29 0 0])
  ("83" .
   [1 0])
  ("37" .
   [1 0])
  ("1000000" .
   [1 0 0 0 0 0 0])
  ("1" .
   [1])
  ("whatthehell2" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("reset!" .
   [8 0 0 1 0 0])
  ("20000" .
   [1 0 0 0 0])
  ("mod" .
   [2 0 0])
  ("zahl" .
   [7 0 0 1])
  ("sqrt" .
   [1 0 0 0])
  ("while" .
   [2 0 0 0 0])
  ("find-doc" .
   [1 0 0 0 0 0 0 0])
  ("get-at" .
   [13 0 0 0 0 2])
  ("board-Y" .
   [1 0 0 0 0 0 0])
  ("board-X" .
   [1 0 0 0 0 0 0])
  ("11" .
   [3 0])
  ("dim-board" .
   [0 0 0 0 0 0 1 0 0])
  ("init-board" .
   [1 0 0 0 0 1 0 3 0 0])
  ("testing" .
   [1 0 0 0 0 0 0])
  ("water-ver" .
   [1 0 0 0 0 0 0 0 0])
  ("water" .
   [3 0 0 0 0])
  (":rot" .
   [1 0 0 0])
  (":color" .
   [1 0 0 0 0 0])
  (":token" .
   [10 0 0 0 0 0])
  ("show-color" .
   [4 0 0 0 0 0 0 2 0 0])
  ("partition-board" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("show-token" .
   [1 0 0 0 0 0 0 1 0 0])
  ("show-field" .
   [0 0 0 0 0 1 0 1 0 0])
  ("token" .
   [18 0 0 0 0])
  ("land?" .
   [3 0 0 0 0])
  ("Ptoken" .
   [1 0 0 0 0 0])
  ("color?" .
   [1 0 0 0 0 0])
  ("color" .
   [6 0 0 0 0])
  ("Pfield" .
   [1 0 0 0 0 0])
  (":ground" .
   [3 0 0 0 0 0 0])
  ("player" .
   [10 0 0 0 0 1])
  (":land" .
   [9 0 0 0 0])
  ("field" .
   [9 0 0 1 0])
  ("position" .
   [1 0 0 0 0 0 0 0])
  ("nth" .
   [15 0 0])
  ("besetzt?" .
   [2 0 0 3 1 1 0 0])
  ("board" .
   [47 0 0 1 4])
  ("val" .
   [5 0 0])
  ("partition" .
   [10 0 0 0 0 0 0 0 0])
  ("take-all" .
   [1 0 0 0 0 0 0 0])
  ("10" .
   [18 0])
  ("Lion" .
   [1 0 0 0])
  ("Bunny" .
   [2 0 0 0 0])
  ("bardis" .
   [2 0 0 0 0 0])
  ("foo" .
   [9 0 0])
  ("xSpec" .
   [3 0 0 0 1])
  (":Lion" .
   [4 0 0 0 0])
  ("instance?" .
   [0 0 0 0 0 1 1 0 0])
  ("Class" .
   [1 0 0 0 0])
  ("String" .
   [3 0 0 0 0 0])
  ("l1" .
   [2 0])
  ("b1" .
   [2 0])
  (":Bunny" .
   [5 0 0 0 0 0])
  ("encounter" .
   [0 0 4 8 2 1 1 0 0])
  (":Species" .
   [6 0 1 1 3 0 0 0])
  (":add-list" .
   [1 0 0 0 1 0 0 1 0])
  ("appropriate?" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("*ops*" .
   [2 0 1 4 0])
  ("op" .
   [17 0])
  ("find-all" .
   [1 0 0 0 0 0 0 0])
  ("find" .
   [1 0 0 0])
  ("member" .
   [5 0 0 0 0 0])
  ("read-line" .
   [3 0 0 0 0 0 0 0 3])
  ("ycoll" .
   [1 0 0 0 0])
  ("xcoll" .
   [1 0 0 0 0])
  ("cross-product" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("classname" .
   [1 0 0 0 0 0 0 0 0])
  ("programm" .
   [4 0 0 0 0 0 0 0])
  ("nsname" .
   [1 0 0 0 0 0])
  ("slots" .
   [1 0 0 0 0])
  ("slots*" .
   [2 0 0 0 0 0])
  ("functions*" .
   [1 0 0 0 0 0 0 0 0 0])
  ("classes*" .
   [2 0 0 0 0 0 0 0])
  ("classes" .
   [1 0 0 0 0 0 0])
  ("functions" .
   [4 0 0 0 0 0 0 0 1])
  ("namespaces*" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("members" .
   [1 0 0 0 0 0 0])
  ("methods" .
   [4 0 0 0 0 0 0])
  ("Programm" .
   [1 0 0 0 0 0 0 0])
  ("swap!" .
   [11 0 0 0 0])
  ("counter" .
   [1 0 0 0 0 0 0])
  ("xlist" .
   [3 0 0 1 0])
  ("ylist" .
   [3 0 0 1 0])
  ("combine-all" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("phare" .
   [0 0 0 1 0])
  ("generate-all" .
   [2 0 0 0 0 0 0 0 0 0 0 2])
  ("*s-grammer*" .
   [0 0 1 0 0 0 0 0 0 0 0])
  ("false?" .
   [7 0 0 0 0 0])
  ("vector" .
   [1 0 0 0 0 0])
  (":default" .
   [6 0 0 0 1 0 1 0])
  ("generate-tree" .
   [3 0 0 0 0 0 0 0 0 1 0 0 0])
  ("rewit" .
   [1 0 0 0 0])
  ("gensym" .
   [0 0 0 1 0 0])
  ("rewrites" .
   [6 0 0 3 1 3 1 0])
  ("generate" .
   [5 0 0 0 2 2 0 2])
  ("mappend" .
   [2 0 0 0 0 0 0])
  ("list?" .
   [6 0 0 0 0])
  ("phrase" .
   [29 0 6 5 1 2])
  ("*grammer*" .
   [0 0 0 0 0 1 0 0 0])
  ("category" .
   [0 0 0 0 1 0 0 0])
  ("get-rule" .
   [1 0 0 0 0 0 0 0])
  ("filter" .
   [3 0 0 1 1 0])
  ("gram" .
   [3 0 0 1])
  ("rule-rhs" .
   [2 0 0 0 0 0 0 0])
  ("rule-lhs" .
   [1 0 0 0 0 0 0 0])
  ("second" .
   [14 0 0 0 0 0])
  ("assoc" .
   [13 0 0 0 0])
  ("rule" .
   [17 0 0 0])
  ("*simple-grammer*" .
   [0 0 0 0 2 6 1 0 1 0 1 0 0 0 0 0])
  ("atom" .
   [18 0 0 0])
  ("grammer" .
   [21 0 0 0 0 0 0])
  ("table" .
   [3 0 0 0 0])
  ("woman" .
   [3 0 0 0 0])
  ("ball" .
   [3 0 0 0])
  ("liked" .
   [4 0 0 0 0])
  ("took" .
   [2 0 0 0])
  ("hit" .
   [3 0 0])
  ("verb-phrase" .
   [1 0 0 0 1 1 0 0 0 0 0])
  ("->" .
   [34 0])
  ("sentence" .
   [1 0 0 0 0 1 0 0])
  ("list*" .
   [0 0 0 0 1])
  ("list-rand-nth" .
   [0 0 0 0 0 0 1 0 2 0 0 0 0])
  ("list" .
   [14 0 0 1])
  ("flatten" .
   [8 0 0 0 0 0 0])
  ("noun-phrase" .
   [0 0 0 0 1 0 2 2 2 1 0])
  ("Verb" .
   [3 0 0 2])
  ("Noun" .
   [7 0 0 2])
  ("Article" .
   [20 0 0 1 3 0 0])
  ("rand-nth" .
   [7 0 0 0 0 0 1 2])
  ("render-form" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("display" .
   [1 0 0 0 0 0 0])
  ("testremote" .
   [0 0 0 0 1 0 0 0 0 0])
  ("prn" .
   [17 0 0])
  ("On" .
   [1 0])
  ("dec" .
   [33 0 0])
  ("inc" .
   [23 0 0])
  ("CreatRemote" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("offvec" .
   [1 0 0 0 0 0])
  ("onvec" .
   [1 0 0 0 0])
  (":off" .
   [2 0 0 0])
  (":on" .
   [2 0 0])
  ("off" .
   [1 0 0])
  ("onremote" .
   [0 0 0 0 1 0 0 0])
  ("remote-update" .
   [0 0 0 0 0 0 0 0 0 2 0 0 0])
  ("key" .
   [26 0 0])
  ("conj" .
   [17 0 0 0])
  ("update-in" .
   [1 0 1 0 0 0 2 1 0])
  ("Remote" .
   [2 0 0 0 1 0])
  ("last" .
   [9 0 0 3])
  ("remove" .
   [8 0 0 0 1 0])
  ("PRemote" .
   [0 0 0 0 0 1 0])
  ("Off" .
   [1 0 0])
  ("remote" .
   [10 0 0 0 0 3])
  ("designpatterns.command" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":salami" .
   [9 0 0 0 0 0 0])
  ("PizzeriaBerlin" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("SalamiPizza" .
   [1 0 0 1 0 0 0 1 2 0 0])
  ("PPizzeria" .
   [0 0 0 0 1 0 0 0 0])
  ("Krabben" .
   [1 0 0 0 0 0 0])
  ("Schinken" .
   [1 0 0 0 0 0 0 0])
  (":>>" .
   [3 0 0])
  ("Salami" .
   [1 0 0 0 0 0])
  ("condp" .
   [3 0 0 0 0])
  ("cond" .
   [20 0 0 0])
  ("PizzaTyp" .
   [0 0 0 0 2 1 0 2])
  ("type" .
   [11 0 0 0])
  ("erstellePizza" .
   [0 0 0 0 0 0 1 0 1 0 0 0 0])
  ("filiale" .
   [3 0 0 0 3 0 0])
  ("lst" .
   [21 0 0])
  ("Getränk" .
   [0 0 1 0 0 0 0])
  ("zutaten" .
   [4 0 0 0 0 0 0])
  ("seq" .
   [33 0 0])
  (":hausmischung" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":milchschaum" .
   [0 0 0 0 2 1 0 0 0 0 0 0])
  (":dunkle-röstung" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("apply" .
   [42 0 0 0 2])
  ("preis" .
   [0 0 0 0 1])
  ("prefers" .
   [0 0 0 1 1 0 0])
  ("let" .
   [49 0 0])
  (":soja" .
   [4 0 0 0 1])
  ("get-in" .
   [10 0 0 2 1 1])
  ("Zutaten" .
   [11 0 2 8 1 3 4])
  (":schoko" .
   [5 0 0 0 0 1 0])
  ("print" .
   [17 0 0 1 1])
  (":or" .
   [1 0 0])
  ("GetränkPreis" .
   [0 0 0 0 0 0 0 0 0 1 1 0])
  (":espresso" .
   [0 0 0 0 1 0 0 0 0])
  ("GetränkName" .
   [1 0 2 0 1 0 0 0 1 0 0])
  ("partial" .
   [18 0 0 2 3 1 1])
  ("interpose" .
   [6 0 0 0 0 0 0 0 0])
  ("intern" .
   [2 0 0 0 0 2])
  ("interleave" .
   [4 0 0 0 0 1 0 0 0 0])
  ("GetGetränk" .
   [0 0 0 0 0 1 1 0 0 0])
  ("comp" .
   [6 0 0 0])
  ("reduce-fn" .
   [3 0 0 0 0 0 0 0 1])
  ("basis" .
   [10 0 0 0 1])
  ("CombiGetränkName" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("reduce" .
   [6 0 0 0 0 0])
  ("lst-zutaten" .
   [0 0 0 3 0 2 6 0 0 0 0])
  ("Getränke" .
   [2 0 0 5 6 2 0 0])
  ("get" .
   [49 0 0])
  ("0.1" .
   [1 0 0])
  (":name" .
   [22 0 0 0 0])
  ("1.05" .
   [1 0 0 0])
  (":preis" .
   [16 0 0 0 1 0])
  ("0.89" .
   [1 0 0 0])
  ("println-str" .
   [0 0 0 0 0 1 1 2 0 0 0])
  ("fliegt_nicht" .
   [0 0 0 0 0 0 0 0 0 1 0 1])
  ("quitschen" .
   [0 0 0 1 0 0 0 0 0])
  ("defente" .
   [3 0 0 0 0 1 0])
  ("tönen" .
   [1 0 0 0 0])
  ("items" .
   [8 0 0 0 0])
  ("show" .
   [7 0 0 0])
  ("geräusch" .
   [0 0 0 1 0 1 1 0])
  (":show" .
   [2 0 0 0 0])
  (":items" .
   [2 0 0 0 0 1])
  (":geräusch" .
   [1 0 0 1 1 0 0 0 0])
  ("fliegt_normal" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0])
  (":fliegen" .
   [0 0 0 1 2 0 0 0])
  ("AEnte" .
   [1 0 0 0 0])
  (":anzeigen" .
   [1 0 0 0 0 0 0 0 0])
  ("this" .
   [36 0 0 0])
  ("fn" .
   [51 0])
  ("PEnte" .
   [3 0 0 0 0])
  ("stumm" .
   [1 0 0 0 0])
  ("quietschen" .
   [1 0 0 2 0 0 0 0 0 0])
  ("fliegen" .
   [12 0 0 0 0 0 0])
  ("quacken" .
   [6 0 0 0 0 0 0])
  ("quaken" .
   [8 0 0 0 0 0])
  ("anzeigen" .
   [10 0 0 0 0 1 0 0])
  ("anzeige" .
   [3 0 0 0 0 0 0])
  ("defprotocol" .
   [1 0 0 0 1 1 5 4 4 0 0])
  ("fliegnicht" .
   [0 0 0 2 1 1 0 0 0 0])
  ("GummiEnte" .
   [1 0 0 0 0 2 0 0 0])
  ("MoorEnte" .
   [1 0 0 0 2 0 1 0])
  ("normalflug" .
   [4 0 0 0 1 0 1 0 0 0])
  ("fligen" .
   [4 0 0 0 0 0])
  ("defmethod" .
   [7 0 0 3 6 6 0 1 0])
  ("class" .
   [22 0 0 0 0])
  ("defmulti" .
   [5 0 0 0 0 1 11 0])
  ("Ente" .
   [6 0 0 0])
  ("CreatEnte" .
   [6 0 0 0 0 0 0 0 0])
  ("data" .
   [1 0 0 0])
  ("first" .
   [39 0 0 0 0])
  ("opp-dec" .
   [3 0 0 0 0 0 0])
  ("my-dec" .
   [1 0 0 0 0 0])
  ("println" .
   [164 0 0 0 0 0 0])
  ("100" .
   [6 0 0])
  ("range" .
   [11 0 0 0 0])
  ("true?" .
   [9 0 0 0 0])
  ("some" .
   [13 0 0 0])
  ("rand" .
   [1 0 0 0])
  ("tft-move" .
   [0 0 0 0 1 0 2 0])
  ("randomnum" .
   [4 0 0 0 0 0 0 0 0])
  ("defn" .
   [266 0 0 1])
  ("rand-int" .
   [1 0 0 0 0 0 0 0])
  ("repeatedly" .
   [0 0 0 0 1 0 2 0 0 0])
  ("for" .
   [9 0 0])
  (":cooperate" .
   [0 0 0 0 1 3 0 0 0 0])
  (":defact" .
   [5 0 0 0 0 0 0])
  ("is" .
   [34 0])
  ("ftft-move" .
   [1 0 0 0 0 0 0 1 0])
  ("deftest" .
   [23 0 0 0 0 0 0])
  ("comment" .
   [15 0 0 0 0 0 0])
  ("clojure.test" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("clojure.set" .
   [1 0 0 0 1 0 0 0 0 1 0])
  ("titfortat.test.core" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("titfortat.players" .
   [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0])
  (":reload-all" .
   [0 0 0 0 2 0 0 0 0 0 0])
  (":use" .
   [14 0 0 0])
  ("init-player" .
   [4 0 0 0 1 0 0 3 0 0 0])
  ("name" .
   [32 0 0 0])
  ("str" .
   [68 0 0])
  ("test" .
   [8 0 0 1])
  ("moves" .
   [1 0 0 0 0])
  ("int" .
   [12 0 0])
  ("symbol" .
   [3 0 0 1 0 0])
  ("defmacro" .
   [6 0 0 0 0 0 1 0])
  ("titfortat.players.core" .
   [0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0])
  ("titfortat.core" .
   [0 0 1 4 0 1 0 0 0 0 0 0 0 0])
  ("ns" .
   [10 0])
  ("name-score" .
   [0 0 0 0 0 0 0 1 0 0])
  ("namespace" .
   [4 0 0 1 0 0 1 0 1])
  ("score-filter" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("scoresort" .
   [1 0 0 0 1 1 0 0 1])
  ("score" .
   [8 0 0 0 0])
  ("repeat" .
   [22 0 0 3 0 0])
  ("take-while" .
   [0 0 0 0 0 1 2 1 1 1])
  ("take-last" .
   [0 0 0 1 1 1 0 0 0])
  ("scoredata" .
   [2 0 0 0 0 0 1 0 0])
  ("players" .
   [3 0 0 0 0 0 0])
  ("merge" .
   [6 0 0 0 0])
  ("merge-with" .
   [0 0 0 0 0 0 0 0 1 0])
  ("map" .
   [83 0 0])
  ("_" .
   [21])
  ("designpatterns.core" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("TheCore" .
   [1 0 0 0 0 0 0])
  ("defrecord" .
   [16 0 0 0 0 1 3 3 0])
  ("args" .
   [8 0 0 0])
  ("into" .
   [10 0 0 0])
  ("GetPizza" .
   [1 0 0 0 1 0 0 0])
  ("Filiale" .
   [1 0 0 2 1 0 0])
  ("Pizzaart" .
   [0 0 3 0 1 1 0 0])
  ("FilialePizza" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("teig" .
   [4 0 0 0])
  ("sosse" .
   [4 0 0 0 0])
  ("käse" .
   [2 0 0 0])
  ("Fabrik" .
   [2 0 0 0 0 0])
  ("Factory" .
   [3 0 0 1 1 4 1])
  ("SchinkenPizza" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Pizza" .
   [9 0 0 2 1])
  ("factory" .
   [1 0 0 0 0 0 0])
  ("belag" .
   [7 0 0 0 0])
  ("schneiden" .
   [2 0 0 0 0 0 0 0 0])
  ("backen" .
   [3 0 0 0 0 0])
  ("Verpacken" .
   [0 0 0 0 0 0 0 0 1])
  ("when" .
   [31 0 0 0])
  ("nil?" .
   [15 0 0 3])
  ("StandardSchneiden" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0])
  ("StandardVerpacken" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("take" .
   [17 0 0 0])
  ("count" .
   [22 0 0 0 0])
  ("path" .
   [7 0 0 0])
  ("seq?" .
   [3 0 0 0])
  ("string?" .
   [1 0 0 0 0 0 0])
  ("doall" .
   [9 0 0 0 0])
  ("clojure.pprint.dispatch" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("pprint" .
   [16 0 0 0 0 0])
  ("drop" .
   [8 0 0 0])
  ("split-with" .
   [1 0 0 0 0 0 0 0 0 0])
  ("matcher" .
   [1 0 0 0 0 0 0])
  ("split-" .
   [0 0 0 0 0 1])
  ("split-at" .
   [0 0 0 0 1 0 0 0])
  ("time" .
   [0 0 2 2])
  ("timestring" .
   [0 0 0 0 0 0 2 1 0 0])
  ("Integer" .
   [0 0 0 1 1 0 2])
  ("Baumgartner" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("ring.adapter.jetty" .
   [1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("clj-sort" .
   [0 0 0 0 0 0 1 0])
  ("clj-sort-c" .
   [0 0 0 0 0 0 0 0 0 1])
  ("rest" .
   [33 0 0 1])
  ("empty?" .
   [12 0 0 0 0 0])
  ("cons" .
   [14 0 0 0])
  ("loop" .
   [13 0 0 0])
  ("output" .
   [7 0 0 0 0 1])
  ("concat" .
   [39 0 0 0 0 0])
  ("recur" .
   [11 0 0 0 0])
  ("base" .
   [7 0 0 0])
  ("newline" .
   [4 0 0 1 0 0 1])
  ("newnum" .
   [3 0 0 0 1 0])
  ("cessor" .
   [2 0 0 0 0 0])
  ("next" .
   [4 0 0 0])
  ("iterate" .
   [1 0 0 0 0 0 0])
  ("num" .
   [2 0 0])
  ("hoch" .
   [1 0 0 0])
  ("PP*" .
   [3 0 0])
  ("->>" .
   [1 0 0])
  ("Adj*" .
   [2 0 0 0])
  ("Prep" .
   [1 0 0 0])
  ("Adj" .
   [1 0 0])
  ("simple" .
   [1 0 0 0 0 0])
  ("*bigger-grammer*" .
   [0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0])
  ("reader" .
   [3 0 0 0 1 0])
  ("pp" .
   [3 0])
  ("op-p" .
   [2 0 0 0])
  ("fst" .
   [1 0 0])
  ("partition-by" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("item" .
   [7 0 0 0])
  ("complement" .
   [1 0 0 0 0 0 0 0 0 0])
  ("unknown" .
   [1 0 0 0 0 0 0])
  ("poor" .
   [1 0 0 0])
  ("rich" .
   [1 0 0 0])
  ("GPS" .
   [3 0 0])
  ("every?" .
   [7 0 0 0 0 0])
  ("goals" .
   [3 0 0 0 1])
  ("achived?" .
   [0 0 0 1 0 1 0 0])
  ("or" .
   [2 0])
  ("goal" .
   [11 0 0 0])
  ("stat" .
   [12 0 0 0])
  ("standard" .
   [1 0 0 0 0 0 0 0])
  ("GET" .
   [26 0 0])
  ("index" .
   [5 0 0 0 0])
  (":message" .
   [0 0 0 1 0 0 0 0])
  ("baumgartner.core" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("compojure.core" .
   [0 0 0 0 0 0 1 2 0 0 0 0 0 0])
  ("apply-op" .
   [2 0 0 0 0 0 0 0])
  (":preconds" .
   [0 0 0 0 0 0 1 0 0])
  (":action" .
   [2 0 0 0 0 0 0])
  (":del-list" .
   [1 0 0 0 0 0 0 1 0])
  ("stratego.board" .
   [1 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("stratego.test.board" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":reload" .
   [1 0 0 0 0 0 0])
  ("nil" .
   [1 0 0])
  (":x" .
   [4 0])
  (":y" .
   [3 0])
  (":water" .
   [1 0 0 0 0 0])
  ("ground" .
   [2 0 0 0 0 0])
  ("field." .
   [1 0 0 0 0 0])
  ("cfield" .
   [3 0 0 0 1 0])
  ("move-player" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("my-board" .
   [0 0 0 0 0 1 0 0])
  ("pos5-5" .
   [3 0 0 0 0 0])
  ("move-token" .
   [11 0 0 0 0 0 0 1 1 0])
  ("moved-board" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("set-token" .
   [13 0 0 0 0 0 0 3 0])
  ("get-at-test" .
   [0 0 0 0 0 0 2 0 0 0 0])
  ("assoc!" .
   [0 0 0 0 0 1])
  ("assoc-in" .
   [0 0 0 0 0 0 0 1])
  ("x-orgin" .
   [1 0 0 0 0 0 0])
  ("y-orgin" .
   [1 0 0 0 0 0 0])
  ("x-target" .
   [0 0 0 0 0 1 0 0])
  ("y-target" .
   [0 0 0 1 0 0 0 0])
  ("dissoc" .
   [2 0 0 0 0 0])
  ("set" .
   [17 0 0])
  ("del-token" .
   [3 0 0 0 0 0 0 0 0])
  ("update-board" .
   [1 0 0 0 0 0 0 0 0 1 0 0])
  ("TimeParser-app" .
   [0 0 0 0 1 1 1 0 0 0 0 0 0 0])
  ("TimeParser.core" .
   [2 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("appengine-magic.core" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":as" .
   [4 0 0])
  ("main-routes" .
   [1 0 0 0 0 0 1 0 1 0 0])
  ("use" .
   [14 0 0])
  (":only" .
   [1 0 0 0 0])
  ("defroutes" .
   [0 0 0 0 0 0 0 1 0])
  ("sandbar.core" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("hiccup.core" .
   [0 0 0 1 0 0 0 0 0 0 0])
  ("upload-form" .
   [0 0 0 0 0 0 0 0 0 1 0])
  (":h1" .
   [15 0 0])
  ("html" .
   [29 0 0 0])
  ("mylayout" .
   [0 0 0 1 1 1 0 0])
  ("doctype" .
   [2 0 0 0 0 0 0])
  (":html" .
   [1 0 0 0 0])
  (":head" .
   [1 0 0 0 0])
  (":body" .
   [5 0 0 0 0])
  (":h2" .
   [1 0 0])
  ("content" .
   [17 0 0 0 1 1 0])
  ("link-to-js" .
   [0 0 0 0 0 0 0 1 0 0])
  ("home" .
   [1 0 0 0])
  ("users" .
   [8 0 0 0 0])
  (":username" .
   [0 0 0 0 0 1 0 0 0])
  (":keys" .
   [6 0 0 0 0])
  ("temperature" .
   [0 0 0 1 1 0 0 0 0 0 0])
  ("humidity" .
   [0 0 0 0 0 1 0 0])
  (":temperature" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("temp" .
   [2 0 0 0])
  ("WeatherData" .
   [0 0 1 0 0 0 0 0 0 0 0])
  ("MMMTemp" .
   [0 0 0 1 0 0 0])
  ("templst" .
   [1 0 0 2 0 4 1])
  ("max" .
   [5 0 0])
  ("min" .
   [2 0 0])
  (":presure" .
   [1 0 0 0 1 1 0 0])
  ("Current" .
   [0 0 0 0 0 1 1])
  ("lastprefers" .
   [0 0 0 0 0 0 3 1 0 0 0])
  ("currentpresure" .
   [0 0 1 1 1 0 1 0 0 0 0 0 0 0])
  ("vorheranz" .
   [1 0 0 0 1 0 0 0 0])
  ("old" .
   [1 0 0])
  ("cur-p" .
   [3 0 0 0 1])
  ("old-p" .
   [0 0 0 0 1])
  (":val" .
   [1 0 0 0])
  ("t1-val" .
   [1 0 0 0 0 0])
  ("Spy" .
   [1 0 0])
  ("Flag" .
   [1 0 0 0])
  ("executing" .
   [1 0 0 0 0 1 0 0 0])
  ("and" .
   [4 0 0])
  ("if-not" .
   [1 0 0 0 0 0])
  ("executing?" .
   [0 0 0 0 0 1 0 0 0 0])
  ("conj!" .
   [0 0 0 0 1])
  ("ParadigmsOfAIProgramming.GPSadv" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ParadigmsOfAIProgramming.GPSsimple" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("getConnection" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("Month-field" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("TimeTable-field" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0 0 0])
  ("TimeTable-form" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("TimeTable-html" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("Solver" .
   [2 0 0 0 0 0])
  ("clojure.pprint" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("RealWord?" .
   [0 0 0 0 0 1 0 0 0])
  ("wordlst" .
   [5 0 0 0 1 4 1])
  ("char" .
   [2 0 0 0])
  ("line-seq" .
   [3 0 0 0 0 0 0 2])
  ("doseq" .
   [0 0 0 1 0])
  ("word" .
   [6 0 0 0])
  ("dicword" .
   [2 0 0 0 0 1 0])
  ("drop-while" .
   [0 0 0 0 0 0 0 0 1 0])
  ("spit" .
   [2 0 0 0])
  ("write" .
   [1 0 0 0 0])
  ("w1_1" .
   [2 0 0 0])
  ("w1_2" .
   [5 0 0 0])
  ("w1_3" .
   [5 0 0 0])
  ("w2_3" .
   [4 0 0 0])
  ("w2_2" .
   [3 0 0 0])
  ("textbox" .
   [5 0 0 0 0 0 0])
  ("show-form" .
   [0 0 0 0 0 0 0 1 0])
  ("w2_1" .
   [1 0 0 0])
  ("20" .
   [1 0])
  (":Word-1" .
   [2 0 0 0 0 0 0])
  (":table" .
   [1 0 0 0 0 0])
  (":tr" .
   [3 0 0])
  ("w3_3" .
   [1 0 0 0])
  ("clojure.string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("split" .
   [1 0 0 0 0])
  ("clojure.string/split" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Integer/parseInt" .
   [0 0 0 0 0 0 0 0 0 0 0 2 0 1 0 0])
  ("recmal" .
   [1 0 0 0 0 0])
  ("long" .
   [16 0 0 1])
  ("getfile-as-char-seq" .
   [0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("stack" .
   [2 0 0 0 0])
  ("empty-stack" .
   [0 0 0 1 0 0 0 0 0 0 0])
  ("Angriff" .
   [12 0 0 0 0 0 0])
  ("eine" .
   [1 0 0 0])
  ("Rüstung" .
   [10 0 0 1 0 0 0])
  ("Jeder" .
   [1 0 0 0 0])
  ("Kämpfer" .
   [4 0 0 0 0 0 0])
  ("Angriffgeschwindikeit." .
   [0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0])
  ("Angriffgeschwindikeit" .
   [0 0 0 1 1 2 3 1 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("Items" .
   [5 0 0 0 0])
  ("Eigenschaften" .
   [3 0 0 0 2 2 1 2 0 0 0 1 0])
  ("ChoiseItems" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("taktik" .
   [4 0 0 0 0 0])
  ("sort-by" .
   [2 0 0 0 0 0 0])
  (":art" .
   [3 0 0 0])
  ("Item" .
   [7 0 0 0])
  ("Helm" .
   [3 0 0 0])
  ("Eigenschaften." .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Attrib" .
   [4 0 0 0 0 0])
  ("fun1" .
   [1 0 0 0])
  ("neteval-test.net_eval" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("9999" .
   [1 0 0 0])
  ("ping" .
   [1 0 0 0])
  ("mytest" .
   [1 0 0 0 0 0])
  ("cycle" .
   [1 0 0 0 0])
  ("nodes" .
   [3 0 0 0 0])
  ("docs" .
   [2 0 0 0])
  ("response" .
   [2 0 0 0 0 1 0 0])
  ("with-meta" .
   [1 0 0 0 0 0 0 0 0])
  ("vs-fn" .
   [5 0 0 0 0])
  ("node" .
   [3 0 0 0])
  ("pair" .
   [1 0 0 0])
  ("constantly" .
   [0 0 0 0 0 0 0 0 1 0])
  ("player-pairs" .
   [2 0 0 0 0 0 0 1 0 0 0 0])
  ("net-eval" .
   [1 0 0 0 0 0 0 0])
  ("get-tasks" .
   [0 0 0 0 0 0 0 1 0])
  ("playes" .
   [0 0 0 0 1 0])
  ("VS.net_eval" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("creat-task-vector" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("combine-task" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("get-task-vector" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("VS.executors" .
   [0 0 1 1 1 0 0 0 0 0 0 1])
  ("VS.core" .
   [0 0 0 0 0 2 0])
  ("distinct" .
   [0 0 0 0 0 1 0 0])
  ("distributed" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("serial" .
   [0 0 0 1 0 0])
  ("top" .
   [3 0 0])
  ("plist" .
   [2 0 0 0 0])
  ("rounds" .
   [1 0 0 0 0 0])
  (":score" .
   [2 0 0 0 0 0])
  ("game" .
   [2 0 0 0])
  ("play" .
   [1 0 0 0])
  ("VS.turniermodes" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0])
  ("nice" .
   [2 0 0 0])
  ("asshole" .
   [0 0 0 0 1 0 0])
  ("allvsall" .
   [1 0 0 0 0 0 0 0])
  ("parallel" .
   [0 0 0 1 0 0 0 0])
  ("player1" .
   [1 0 0 0 0 0 0])
  ("player2" .
   [1 0 0 0 0 0 0])
  ("player3" .
   [1 0 0 0 0 0 0])
  ("pdflatex" .
   [1 0 0 0 0 0 0 0])
  ("main.pdf" .
   [0 0 0 0 0 0 0 1])
  ("max-depth" .
   [2 0 0 0 0 0 0 0 0])
  ("stretch-depth" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("check" .
   [1 0 0 0 0])
  ("item-check" .
   [1 0 0 0 0 0 1 0 0 0])
  ("identical?" .
   [2 0 0 0 0 0 0 0 0 0])
  ("long-lived-tree" .
   [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("bottom-up-tree" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("mx" .
   [4 0])
  ("mn" .
   [3 0])
  ("bit-shift-right" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("bit-shift-left" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (".item" .
   [1 0 0 0 0])
  ("Math/pow" .
   [1 0 0 0 0 0 0 0])
  ("unchecked-dec" .
   [0 0 0 2 0 0 0 0 0 0 0 0 0])
  ("unchecked-multiply" .
   [0 0 0 2 0 0 0 0 0 0 0 1 1 0 0 0 0 0])
  ("unchecked-int" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("unchecked-" .
   [0 0 0 0 0 0 0 0 0 1])
  ("unchecked-negate" .
   [0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0])
  ("unchecked-subtract" .
   [0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("*resource-dir*" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("resource-dir" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("template-dir" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("p404" .
   [1 0 0 0])
  ("slurp" .
   [1 0 0 0 0])
  ("net.cgrand.enlive-html" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("defsnippet" .
   [4 0 0 0 0 0 0 0 0 0])
  ("page" .
   [57 0 0 0])
  ("post" .
   [1 0 0 0])
  (":title" .
   [11 0 0 0 0 0])
  ("hdate" .
   [1 0 0 0 0])
  ("cdate" .
   [1 0 0 0 0])
  (":tags" .
   [1 0 0 0 0])
  ("post-link" .
   [2 0 0 0 0 0 0 0 0])
  ("text" .
   [2 0 0 0])
  ("do->" .
   [1 0 0 0])
  ("set-attr" .
   [3 0 0 0 0 0 0 0])
  (":href" .
   [8 0 0 0 0])
  ("tags" .
   [3 0 0 0])
  ("blogposts" .
   [2 0 0 0 0 0 0 0 0])
  ("blogpost" .
   [3 0 0 0 0 1 0 1])
  ("blog-content" .
   [0 0 0 0 0 0 1 1 0 0 0 0])
  ("mymap" .
   [2 0 0 0 0])
  (":content" .
   [1 0 0 0 0 0 0 0])
  (":posts" .
   [2 0 0 0 0 0])
  ("PUT" .
   [1 0 0])
  ("defnk" .
   [2 0 0 0 0])
  ("standard-page" .
   [6 0 0 0 0 0 0 0 0 0 0 0 0])
  (":footer" .
   [1 0 0 0 0 0 0])
  ("header" .
   [7 0 0 0 0 0])
  ("clojure.contrib.io" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("clojure.contrib.def" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("myblog-db" .
   [3 0 0 0 0 0 0 0 0])
  ("with-db" .
   [1 0 0 0 0 0 0])
  ("clojure.sicp.1-1-Exercise" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("size" .
   [2 0 0 0])
  ("ex111" .
   [1 0 0 0 0])
  ("ex111-r" .
   [1 0 0 0 0 0 0])
  ("even?" .
   [5 0 0 0 0])
  ("pascals-triangle" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("pascals-triangle-step" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("double" .
   [1 0 0 0 0 0])
  ("my-double" .
   [2 0 0 0 0 0 0 0 0])
  ("halve" .
   [1 0 0 0 0])
  ("my-*" .
   [3 0 0 0])
  ("number->bintree" .
   [0 0 0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("insert-to-right" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("at-leaf?" .
   [0 0 0 1 0 0 0 1])
  ("insert-to-left" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("move-to-left" .
   [8 0 0 0 0 0 0 0 0 0 0 0])
  ("current-element" .
   [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("move-to-right" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0])
  ("left-bt" .
   [2 0 0 0 0 0 0])
  ("nbt" .
   [2 0 0])
  ("number-bt" .
   [1 0 0 0 0 0 0 0 0])
  ("right-bt" .
   [1 0 0 0 0 0 0 0])
  ("getting-started.core" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("main-page" .
   [1 0 0 0 0 0 0 0 0])
  ("getting-started-page" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":herf" .
   [4 0 0 0 0])
  (":hef" .
   [1 0 0 0])
  (":img" .
   [1 0 0 0])
  (":width" .
   [1 0 0 0 0 0])
  ("book-html" .
   [3 0 0 0 0 0 0 0 0])
  (":pic-src" .
   [2 0 0 0 0 0 0 0])
  (":book-site" .
   [2 0 0 0 0 0 0 0 0 0])
  (":autor" .
   [2 0 0 0 0 0])
  (":text" .
   [2 0 0 0 0])
  ("quick-setup" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("game-vec" .
   [1 0 0 0 0 0 0 0])
  (":game" .
   [3 0 0 0 0])
  (":start" .
   [3 0 0 0 0 0])
  ("123456" .
   [3 0 0 0 1 0])
  ("523456" .
   [0 0 1 1 0 0])
  ("128456" .
   [0 0 0 1 0 0])
  ("173456" .
   [0 0 1 0 0 0])
  ("123256" .
   [1 0 0 0 0 0])
  ("collect" .
   [2 0 0 0 0 0 0])
  ("empty-board" .
   [8 0 0 0 0 0 0 0 2 0 0])
  (":black" .
   [31 0 0 0 0 0])
  (":white" .
   [19 0 0 0 0 0])
  ("21" .
   [3 0])
  (":empty" .
   [27 0 0 0 0 0])
  (":error-token" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("valid-field?" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("posible-muelli" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("is-muelli?" .
   [6 0 0 0 0 0 0 0 0 0])
  ("all-muellis" .
   [0 0 0 0 0 0 1 1 1 0 0])
  ("keep" .
   [4 0 0 0])
  (":muelli?" .
   [4 0 0 1 0 0 0 0])
  ("22" .
   [5 0])
  (":board" .
   [8 0 0 0 0 0])
  ("23" .
   [8 0])
  ("24" .
   [6 0])
  ("posible-moves" .
   [3 0 0 0 0 0 0 1 0 0 0 0 0])
  ("test-board" .
   [2 0 0 0 0 0 0 1 0 0])
  (":mixed" .
   [1 0 0 0 0 0])
  (":full" .
   [1 0 0 0 0])
  ("board-graph" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("token-str" .
   [1 0 0 0 0 0 0 0 0])
  ("defconstrainedfn" .
   [0 0 0 0 0 0 3 1 1 0 0 0 0 0 0 0])
  ("thrown?" .
   [4 0 0 0 0 1 0])
  ("AssertionError" .
   [2 0 0 0 0 0 1 0 1 1 0 0 0 0])
  ("=>" .
   [3 0])
  ("valid-board?" .
   [1 0 0 0 0 0 0 0 2 0 1 0])
  ("start-pos" .
   [2 0 0 0 0 0 0 0 1])
  ("player-tokens" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("start-field" .
   [3 0 0 0 0 0 0 0 5 1 0])
  ("end-field" .
   [3 0 0 0 0 0 2 0 0])
  ("valid-token?" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("get-all" .
   [12 0 0 0 0 0 0])
  ("12" .
   [3 0])
  ("18" .
   [6 0])
  ("map-invert" .
   [0 0 0 0 0 0 1 0 0 0])
  ("takeable-tokens" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1])
  ("pos-coll" .
   [6 0 0 0 0 0 0 0])
  ("diffrent" .
   [0 0 0 0 0 0 1 0])
  ("muellis" .
   [6 0 0 0 0 0 0])
  ("all-token" .
   [1 0 0 0 0 0 0 1 0])
  ("non-muelli-tokens" .
   [0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0])
  ("muelli" .
   [1 0 0 0 0 1])
  ("make-board" .
   [3 0 0 0 0 0 0 0 0 1])
  ("board-dsl" .
   [6 0 0 0 0 0 0 0 0])
  ("%1" .
   [1 0])
  ("%2" .
   [1 0])
  ("return" .
   [1 0 0 0 0 0])))
